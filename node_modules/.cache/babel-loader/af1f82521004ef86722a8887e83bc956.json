{"ast":null,"code":"var _jsxFileName = \"D:\\\\COLLEGE\\\\V\\\\WEBDEV PR\\\\Dashboard-starter-master\\\\src\\\\components\\\\MainDash\\\\Cards\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\nimport { UilTimes } from \"@iconscout/react-unicons\";\nimport Chart from \"react-apexcharts\"; // parent Card\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n    children: expanded ? /*#__PURE__*/_jsxDEV(ExpandedCard, {\n      param: props,\n      setExpanded: () => setExpanded(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CompactCard, {\n      param: props,\n      setExpanded: () => setExpanded(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}; // Compact Card\n\n\n_s(Card, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = Card;\n\nfunction CompactCard(_ref) {\n  let {\n    param,\n    setExpanded\n  } = _ref;\n  const Png = param.png;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"CompactCard\",\n    style: {\n      background: param.color.backGround\n    },\n    layoutId: \"expandableCard\",\n    onClick: setExpanded,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radialBar\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: param.barValue,\n        text: `${param.barValue}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: [/*#__PURE__*/_jsxDEV(Png, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Last 24 hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // Expanded Card\n\n\n_c2 = CompactCard;\n\nfunction ExpandedCard(_ref2) {\n  let {\n    param,\n    setExpanded\n  } = _ref2;\n  const data = {\n    options: {\n      chart: {\n        type: \"area\",\n        height: \"auto\"\n      },\n      fill: {\n        colors: [\"#fff\"],\n        type: \"gradient\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\",\n        colors: [\"white\"]\n      },\n      tooltip: {\n        x: {\n          format: \"dd/MM/yy HH:mm\"\n        }\n      },\n      grid: {\n        show: true\n      },\n      xaxis: {\n        type: \"datetime\",\n        categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ExpandedCard\",\n    style: {\n      background: param.color.backGround\n    },\n    layoutId: \"expandableCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignSelf: \"flex-end\",\n        cursor: \"pointer\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(UilTimes, {\n        onClick: setExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: param.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: data.options,\n        series: param.series,\n        type: \"area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Last 24 hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ExpandedCard;\nexport default Card;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CompactCard\");\n$RefreshReg$(_c3, \"ExpandedCard\");","map":{"version":3,"sources":["D:/COLLEGE/V/WEBDEV PR/Dashboard-starter-master/src/components/MainDash/Cards/Card.jsx"],"names":["React","useState","CircularProgressbar","motion","AnimateSharedLayout","UilTimes","Chart","Card","props","expanded","setExpanded","CompactCard","param","Png","png","background","color","backGround","barValue","title","value","ExpandedCard","data","options","chart","type","height","fill","colors","dataLabels","enabled","stroke","curve","tooltip","x","format","grid","show","xaxis","categories","alignSelf","cursor","series"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\r\nimport { UilTimes } from \"@iconscout/react-unicons\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n// parent Card\r\n\r\nconst Card = (props) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  return (\r\n    <AnimateSharedLayout>\r\n      {expanded ? (\r\n        <ExpandedCard param={props} setExpanded={() => setExpanded(false)} />\r\n      ) : (\r\n        <CompactCard param={props} setExpanded={() => setExpanded(true)} />\r\n      )}\r\n    </AnimateSharedLayout>\r\n  );\r\n};\r\n\r\n// Compact Card\r\nfunction CompactCard({ param, setExpanded }) {\r\n  const Png = param.png;\r\n  return (\r\n    <motion.div\r\n      className=\"CompactCard\"\r\n      style={{\r\n        background: param.color.backGround\r\n      }}\r\n      layoutId=\"expandableCard\"\r\n      onClick={setExpanded}\r\n    >\r\n      <div className=\"radialBar\">\r\n        <CircularProgressbar\r\n          value={param.barValue}\r\n          text={`${param.barValue}%`}\r\n        />\r\n        <span>{param.title}</span>\r\n      </div>\r\n      <div className=\"detail\">\r\n        <Png />\r\n        <span>{param.value}</span>\r\n        <span>Last 24 hours</span>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\n// Expanded Card\r\nfunction ExpandedCard({ param, setExpanded }) {\r\n  const data = {\r\n    options: {\r\n      chart: {\r\n        type: \"area\",\r\n        height: \"auto\",\r\n      },\r\n\r\n      fill: {\r\n        colors: [\"#fff\"],\r\n        type: \"gradient\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n        colors: [\"white\"],\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: \"dd/MM/yy HH:mm\",\r\n        },\r\n      },\r\n      grid: {\r\n        show: true,\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\",\r\n        categories: [\r\n          \"2018-09-19T00:00:00.000Z\",\r\n          \"2018-09-19T01:30:00.000Z\",\r\n          \"2018-09-19T02:30:00.000Z\",\r\n          \"2018-09-19T03:30:00.000Z\",\r\n          \"2018-09-19T04:30:00.000Z\",\r\n          \"2018-09-19T05:30:00.000Z\",\r\n          \"2018-09-19T06:30:00.000Z\",\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"ExpandedCard\"\r\n      style={{\r\n        background: param.color.backGround\r\n      }}\r\n      layoutId=\"expandableCard\"\r\n    >\r\n      <div style={{ alignSelf: \"flex-end\", cursor: \"pointer\", color: \"white\" }}>\r\n        <UilTimes onClick={setExpanded} />\r\n      </div>\r\n        <span>{param.title}</span>\r\n      <div className=\"chartContainer\">\r\n        <Chart options={data.options} series={param.series} type=\"area\" />\r\n      </div>\r\n      <span>Last 24 hours</span>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}